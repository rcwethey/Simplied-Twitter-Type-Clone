{"ast":null,"code":"var _jsxFileName = \"/Users/ryanwethey/Documents/Developer/graphQL Projects/MERNG/client/src/components/postForm.js\";\nimport React from 'react';\nimport { Form, Button } from 'semantic-ui-react';\nimport { gql, useMutation } from '@apollo/client';\nimport { useForm } from '../util/hooks';\n\nconst PostForm = () => {\n  const {\n    values,\n    onChange,\n    onSubmit\n  } = useForm(createPostCallBack, {\n    bod: ''\n  });\n  const [createPost, {\n    error\n  }] = useMutation(CREATE_POST_MUTATION, {\n    variables: values,\n    update: (_, result) => values.body = ''\n  });\n\n  const createPostCallBack = () => createPost();\n\n  return /*#__PURE__*/React.createElement(Form, {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, \"Create a post:\"), /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Input, {\n    placeholder: \"What are you thinking?\",\n    name: \"body\",\n    onChange: onChange,\n    value: values.body,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit color=\",\n    teal: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, \"Submit\")));\n};\n\nconst CREATE_POST_MUTATION = gql`\nmutation createPost($body: String!){\n  createPost(body: $body){\n    id body createdAt username\n    likes {\n      id username createdAt\n    }\n    likeCount\n    comments{\n      id body username createdAt\n    }\n    commentCount\n  }\n}\n`;\nexport default PostForm;","map":{"version":3,"sources":["/Users/ryanwethey/Documents/Developer/graphQL Projects/MERNG/client/src/components/postForm.js"],"names":["React","Form","Button","gql","useMutation","useForm","PostForm","values","onChange","onSubmit","createPostCallBack","bod","createPost","error","CREATE_POST_MUTATION","variables","update","_","result","body"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,mBAA7B;AACA,SAASC,GAAT,EAAcC,WAAd,QAAiC,gBAAjC;AACA,SAASC,OAAT,QAAwB,eAAxB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAM;AAACC,IAAAA,MAAD;AAASC,IAAAA,QAAT;AAAmBC,IAAAA;AAAnB,MAA+BJ,OAAO,CAACK,kBAAD,EAAqB;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAArB,CAA5C;AAEA,QAAM,CAACC,UAAD,EAAa;AAAEC,IAAAA;AAAF,GAAb,IAA0BT,WAAW,CAACU,oBAAD,EAAuB;AAChEC,IAAAA,SAAS,EAAER,MADqD;AAEhES,IAAAA,MAAM,EAAE,CAACC,CAAD,EAAIC,MAAJ,KAAeX,MAAM,CAACY,IAAP,GAAc;AAF2B,GAAvB,CAA3C;;AAKA,QAAMT,kBAAkB,GAAG,MAAME,UAAU,EAA3C;;AAEA,sBACE,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEH,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AACE,IAAA,WAAW,EAAC,wBADd;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,QAAQ,EAAED,QAHZ;AAIE,IAAA,KAAK,EAAED,MAAM,CAACY,IAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAOE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,eAAb;AAA4B,IAAA,IAAI,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,CAFF,CADF;AAcD,CAxBD;;AA0BA,MAAML,oBAAoB,GAAGX,GAAI;;;;;;;;;;;;;;CAAjC;AAgBA,eAAeG,QAAf","sourcesContent":["import React from 'react';\nimport { Form, Button } from 'semantic-ui-react';\nimport { gql, useMutation } from '@apollo/client';\nimport { useForm } from '../util/hooks';\n\nconst PostForm = () => {\n  const {values, onChange, onSubmit} = useForm(createPostCallBack, { bod: ''});\n\n  const [createPost, { error }] = useMutation(CREATE_POST_MUTATION, {\n    variables: values,\n    update: (_, result) => values.body = ''\n  });\n\n  const createPostCallBack = () => createPost();\n\n  return (\n    <Form onSubmit={onSubmit}>\n      <h2>Create a post:</h2>\n      <Form.Field>\n        <Form.Input\n          placeholder=\"What are you thinking?\"\n          name=\"body\"\n          onChange={onChange}\n          value={values.body}\n          />\n        <Button type=\"submit color=\"teal>Submit</Button>\n      </Form.Field>\n    </Form>\n  )\n}\n\nconst CREATE_POST_MUTATION = gql`\nmutation createPost($body: String!){\n  createPost(body: $body){\n    id body createdAt username\n    likes {\n      id username createdAt\n    }\n    likeCount\n    comments{\n      id body username createdAt\n    }\n    commentCount\n  }\n}\n`\n\nexport default PostForm;"]},"metadata":{},"sourceType":"module"}