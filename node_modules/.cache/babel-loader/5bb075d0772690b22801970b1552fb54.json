{"ast":null,"code":"var _jsxFileName = \"/Users/ryanwethey/Documents/Developer/graphQL Projects/MERNG/client/src/Pages/SinglePost.js\";\nimport React, { useContext } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport moment from 'moment';\nimport { Button, Card, Grid, Image, Icon, Label } from 'semantic-ui-react';\nimport { AuthContext } from '../context/auth';\nimport { FETCH_POST_QUERY } from '../util/graphQL';\nimport LikeButton from '../components/likeButton';\nimport DeleteButton from '../components/deleteButton';\n\nfunction SinglePost(props) {\n  const postId = props.match.params.postId;\n  const {\n    user\n  } = useContext(AuthContext);\n  const {\n    data: {\n      getPost\n    } = {}\n  } = useQuery(FETCH_POST_QUERY, {\n    variables: {\n      postId\n    }\n  });\n\n  const deletePostCallback = () => props.history.push('/');\n\n  let postMarkup;\n\n  if (!getPost) {\n    //TODO: Put a spinner here\n    postMarkup = /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 18\n      }\n    }, \"Loading...\");\n  } else {\n    const {\n      id,\n      body,\n      createdAt,\n      username,\n\n      /*comments,*/\n      likes,\n      likeCount,\n      commentCount\n    } = getPost;\n    postMarkup = /*#__PURE__*/React.createElement(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Image, {\n      src: \"https://react.semantic-ui.com/images/avatar/large/molly.png\",\n      size: \"small\",\n      float: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }, username), /*#__PURE__*/React.createElement(Card.Meta, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }, moment(createdAt).fromNow()), /*#__PURE__*/React.createElement(Card.Description, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, body)), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Card.Content, {\n      extra: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(LikeButton, {\n      user: user,\n      post: {\n        id,\n        likeCount,\n        likes\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      as: \"div\",\n      labelPosition: \"right\",\n      onClick: () => console.log('Comment on post'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      basic: true,\n      color: \"blue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      name: \"comments\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Label, {\n      basic: true,\n      color: \"blue\",\n      pointing: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 19\n      }\n    }, commentCount)), user && user.username === username && /*#__PURE__*/React.createElement(DeleteButton, {\n      postId: id,\n      callback: deletePostCallback,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 19\n      }\n    }))), CommentActions.map(comment => /*#__PURE__*/React.createElement(Card, {\n      fluid: true,\n      key: comment.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Card.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 19\n      }\n    }, comment.username), /*#__PURE__*/React.createElement(Card.Meta, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 19\n      }\n    }, moment(createdAt).fromNow()), /*#__PURE__*/React.createElement(Card.Description, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, comment.body)))))));\n  }\n\n  return postMarkup;\n}\n\nexport default SinglePost;","map":{"version":3,"sources":["/Users/ryanwethey/Documents/Developer/graphQL Projects/MERNG/client/src/Pages/SinglePost.js"],"names":["React","useContext","useQuery","moment","Button","Card","Grid","Image","Icon","Label","AuthContext","FETCH_POST_QUERY","LikeButton","DeleteButton","SinglePost","props","postId","match","params","user","data","getPost","variables","deletePostCallback","history","push","postMarkup","id","body","createdAt","username","likes","likeCount","commentCount","fromNow","console","log","CommentActions","map","comment"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport moment from 'moment';\nimport { Button, Card, Grid, Image, Icon, Label } from 'semantic-ui-react';\nimport { AuthContext } from '../context/auth';\nimport {FETCH_POST_QUERY} from '../util/graphQL';\nimport LikeButton from '../components/likeButton';\nimport DeleteButton from '../components/deleteButton';\n\nfunction SinglePost(props) {\n  const postId = props.match.params.postId;\n  const { user } = useContext(AuthContext);\n  const { data: { getPost } ={}} = useQuery(FETCH_POST_QUERY, { variables: {postId} });\n  const deletePostCallback = () => props.history.push('/');\n  let postMarkup;\n\n  if (!getPost) {\n    //TODO: Put a spinner here\n    postMarkup = <p>Loading...</p>\n  } else {\n    const { id, body, createdAt, username, /*comments,*/ likes, likeCount, commentCount } = getPost;\n    postMarkup = (\n      <Grid>\n        <Grid.Row>\n          <Grid.Column width={2}>\n            <Image\n              src=\"https://react.semantic-ui.com/images/avatar/large/molly.png\"\n              size=\"small\"\n              float=\"right\"\n            />\n          </Grid.Column>\n          <Grid.Column width={10}>\n            <Card fluid>\n              <Card.Content>\n                <Card.Header>{username}</Card.Header>\n                <Card.Meta>{moment(createdAt).fromNow()}</Card.Meta>\n                <Card.Description>{body}</Card.Description>\n              </Card.Content>\n              <hr />\n              <Card.Content extra>\n                <LikeButton user={user} post={{ id, likeCount, likes }} />\n                <Button\n                  as=\"div\"\n                  labelPosition=\"right\"\n                  onClick={() => console.log('Comment on post')}>\n                  <Button basic color=\"blue\">\n                    <Icon name=\"comments\" />\n                  </Button>\n                  <Label basic color=\"blue\" pointing=\"left\">\n                    {commentCount}\n                  </Label>\n                </Button>\n                {user && user.username === username && (\n                  <DeleteButton postId={id} callback={deletePostCallback} />\n                )}\n              </Card.Content>\n            </Card>\n            {CommentActions.map(comment => (\n              <Card fluid key={comment.id}>\n                <Card.Content>\n                  <Card.Header>{comment.username}</Card.Header>\n                  <Card.Meta>{moment(createdAt).fromNow()}</Card.Meta>\n            <Card.Description>{comment.body}</Card.Description>\n                </Card.Content>\n              </Card>\n            ))}\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    );\n  }\n  return postMarkup;\n}\n\nexport default SinglePost;"]},"metadata":{},"sourceType":"module"}