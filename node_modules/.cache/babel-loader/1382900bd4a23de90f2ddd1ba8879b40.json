{"ast":null,"code":"import { gql } from '@apollo/client';\nexport const FETCH_POSTS_QUERY = gql`\n  query getPosts{\n    getPosts{\n      id\n      body\n      createdAt\n      username\n      likeCount\n      likes {\n        username\n      }\n      commentCount\n      comments {\n        id\n        username\n        createdAt\n        body\n      }\n    }\n  }\n`;\nexport const CREATE_POST_MUTATION = gql`\n  mutation createPost($body: String!){\n    createPost(body: $body){\n      id \n      body \n      createdAt \n      username\n      likes {\n        id \n        username \n        createdAt\n      }\n      likeCount\n      comments{\n        id \n        body \n        username \n        createdAt\n      }\n      commentCount\n    }\n  }\n`;\nexport const LOGIN_USER = gql`\n  mutation login($username: String!, $password: String!){\n    login(username: $username, password: $password){\n      id email username token createdAt\n    }\n  }\n`;\nexport const REGISTER_USER = gql`\nmutation register($username: String!, $email: String!, $password: String!, $confirmPassword: String!){\n  register( registerInput: {username: $username, email: $email, password: $password, confirmPassword: $confirmPassword} )\n  {\n    id email username createdAt token\n  }\n}\n`;","map":{"version":3,"sources":["/Users/ryanwethey/Documents/Developer/graphQL Projects/MERNG/client/src/util/graphQL.js"],"names":["gql","FETCH_POSTS_QUERY","CREATE_POST_MUTATION","LOGIN_USER","REGISTER_USER"],"mappings":"AAAA,SAASA,GAAT,QAAoB,gBAApB;AAEA,OAAO,MAAMC,iBAAiB,GAAGD,GAAI;;;;;;;;;;;;;;;;;;;;CAA9B;AAsBP,OAAO,MAAME,oBAAoB,GAAGF,GAAI;;;;;;;;;;;;;;;;;;;;;;CAAjC;AAwBP,OAAO,MAAMG,UAAU,GAAGH,GAAI;;;;;;CAAvB;AAQP,OAAO,MAAMI,aAAa,GAAEJ,GAAI;;;;;;;CAAzB","sourcesContent":["import { gql } from '@apollo/client';\n\nexport const FETCH_POSTS_QUERY = gql`\n  query getPosts{\n    getPosts{\n      id\n      body\n      createdAt\n      username\n      likeCount\n      likes {\n        username\n      }\n      commentCount\n      comments {\n        id\n        username\n        createdAt\n        body\n      }\n    }\n  }\n`;\n\nexport const CREATE_POST_MUTATION = gql`\n  mutation createPost($body: String!){\n    createPost(body: $body){\n      id \n      body \n      createdAt \n      username\n      likes {\n        id \n        username \n        createdAt\n      }\n      likeCount\n      comments{\n        id \n        body \n        username \n        createdAt\n      }\n      commentCount\n    }\n  }\n`;\n\nexport const LOGIN_USER = gql`\n  mutation login($username: String!, $password: String!){\n    login(username: $username, password: $password){\n      id email username token createdAt\n    }\n  }\n`;\n\nexport const REGISTER_USER =gql`\nmutation register($username: String!, $email: String!, $password: String!, $confirmPassword: String!){\n  register( registerInput: {username: $username, email: $email, password: $password, confirmPassword: $confirmPassword} )\n  {\n    id email username createdAt token\n  }\n}\n`;"]},"metadata":{},"sourceType":"module"}