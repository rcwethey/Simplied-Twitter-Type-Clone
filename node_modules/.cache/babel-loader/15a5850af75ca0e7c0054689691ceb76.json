{"ast":null,"code":"var _jsxFileName = \"/Users/ryanwethey/Documents/Developer/graphQL Projects/MERNG/client/src/Pages/Login.js\";\nimport React, { useState } from 'react';\nimport { Form, Button } from 'semantic-ui-react';\nimport { useMutation } from '@apollo/react-hooks';\nimport gql from 'graphql';\nimport { useForm } from '../util/hooks';\n\nconst Login = props => {\n  const [errors, setErrors] = useState({});\n  const {\n    onSubmit,\n    onChange,\n    values\n  } = useForm(loginUserCallback, {\n    username: '',\n    password: ''\n  });\n  const [loginUser, {\n    loading\n  }] = useMutation(LOGIN_USER, {\n    onError(err) {\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\n    },\n\n    onCompleted() {\n      props.history.push('/');\n    },\n\n    variables: values\n  });\n\n  function loginUserCallback() {\n    loginUser();\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: onSubmit,\n    noValidate: true,\n    className: laoding ? 'loading' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(Form.Input, {\n    label: \"Username\",\n    placeholder: \"Username...\",\n    type: \"text\",\n    error: errors.username ? true : false,\n    name: \"username\",\n    onChange: onChange,\n    value: values.username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Form.Input, {\n    label: \"Password\",\n    placeholder: \"Password...\",\n    type: \"password\",\n    error: errors.password ? true : false,\n    name: \"password\",\n    onChange: onChange,\n    value: values.password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    primary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, \"Login\")), Object.keys(errors).length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ui error message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, Object.values(errors).map(value => /*#__PURE__*/React.createElement(\"li\", {\n    key: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, value)))));\n};\n\nconst LOGIN_USER = gql`\n  mutation login($username: String!, $password: String!){\n    login(username: $username, password: $password){\n      id email username token createdAt\n    }\n  }\n`;\nexport default Login;","map":{"version":3,"sources":["/Users/ryanwethey/Documents/Developer/graphQL Projects/MERNG/client/src/Pages/Login.js"],"names":["React","useState","Form","Button","useMutation","gql","useForm","Login","props","errors","setErrors","onSubmit","onChange","values","loginUserCallback","username","password","loginUser","loading","LOGIN_USER","onError","err","graphQLErrors","extensions","exception","onCompleted","history","push","variables","laoding","Object","keys","length","map","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Form, Button } from 'semantic-ui-react';\nimport { useMutation } from '@apollo/react-hooks';\nimport gql from 'graphql';\nimport { useForm } from '../util/hooks';\n\nconst Login = props => {\n  const [errors, setErrors] = useState({})\n  const { onSubmit, onChange, values } = useForm(loginUserCallback, {\n    username: '',\n    password: ''\n  })\n\n  const [loginUser, { loading }] = useMutation(LOGIN_USER, {\n    onError(err){ setErrors(err.graphQLErrors[0].extensions.exception.errors) },\n    onCompleted(){ props.history.push('/') },\n    variables: values\n  })\n\n  function loginUserCallback(){ \n    loginUser();\n  }\n\n  return (\n    <div className='form-container'>\n      <Form onSubmit={onSubmit} noValidate className={laoding ? 'loading' : ''}>\n        <h1>Login</h1>\n        <Form.Input \n          label=\"Username\"\n          placeholder=\"Username...\"\n          type=\"text\"\n          error={errors.username ? true : false}\n          name=\"username\"\n          onChange={onChange}\n          value={values.username}/>\n        <Form.Input \n          label=\"Password\" \n          placeholder=\"Password...\" \n          type=\"password\"\n          error={errors.password ? true : false} \n          name=\"password\" \n          onChange={onChange} \n          value={values.password}/>\n        <Button type=\"submit\" primary>Login</Button>\n    </Form>\n    {Object.keys(errors).length > 0 && (\n      <div className=\"ui error message\">\n        <ul className=\"list\">\n          {Object.values(errors).map((value) => (\n            <li key={value}>{value}</li>\n          ))}\n        </ul>\n      </div>\n    )}\n    </div>\n  )\n}\n\nconst LOGIN_USER =gql`\n  mutation login($username: String!, $password: String!){\n    login(username: $username, password: $password){\n      id email username token createdAt\n    }\n  }\n`;\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}