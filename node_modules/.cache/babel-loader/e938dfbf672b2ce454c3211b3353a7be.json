{"ast":null,"code":"var _jsxFileName = \"/Users/ryanwethey/Documents/Developer/graphQL Projects/MERNG/client/src/components/postForm.js\";\nimport React from 'react';\nimport { Form, Button } from 'semantic-ui-react';\nimport { gql, useMutation } from '@apollo/client';\nimport { useForm } from '../util/hooks';\nimport { FETCH_POSTS_QUERY } from '../util/graphQL';\n\nconst PostForm = () => {\n  const {\n    values,\n    onChange,\n    onSubmit\n  } = useForm(createPostCallBack, {\n    body: ''\n  });\n  const [createPost, {\n    error\n  }] = useMutation(CREATE_POST_MUTATION, {\n    variables: (proxy, result) => {\n      const data = proxy.readQuery({\n        guery: FETCH_POSTS_QUERY\n      });\n      console.log(data);\n      data.getPosts = [result.data.createPost, ...data.getPosts];\n      proxy.writeQuery({\n        query: FETCH_POSTS_QUERY,\n        data\n      });\n      values.body = ''; //onError: err => {err.graphQLErrors[0].extensions.exception.errors}\n    }\n  });\n\n  function createPostCallBack() {\n    createPost();\n  }\n\n  return /*#__PURE__*/React.createElement(Form, {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, \"Create a post:\"), /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Input, {\n    placeholder: \"What are you thinking?\",\n    name: \"body\",\n    onChange: onChange,\n    value: values.body,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    color: \"teal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, \"Submit\")));\n};\n\nconst CREATE_POST_MUTATION = gql`\nmutation createPost($body: String!){\n  createPost(body: $body){\n    id body createdAt username\n    likes {\n      id username createdAt\n    }\n    likeCount\n    comments{\n      id body username createdAt\n    }\n    commentCount\n  }\n}\n`;\nexport default PostForm;","map":{"version":3,"sources":["/Users/ryanwethey/Documents/Developer/graphQL Projects/MERNG/client/src/components/postForm.js"],"names":["React","Form","Button","gql","useMutation","useForm","FETCH_POSTS_QUERY","PostForm","values","onChange","onSubmit","createPostCallBack","body","createPost","error","CREATE_POST_MUTATION","variables","proxy","result","data","readQuery","guery","console","log","getPosts","writeQuery","query"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,mBAA7B;AACA,SAASC,GAAT,EAAcC,WAAd,QAAiC,gBAAjC;AACA,SAASC,OAAT,QAAwB,eAAxB;AACA,SAAQC,iBAAR,QAAgC,iBAAhC;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAM;AAACC,IAAAA,MAAD;AAASC,IAAAA,QAAT;AAAmBC,IAAAA;AAAnB,MAA+BL,OAAO,CAACM,kBAAD,EAAqB;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAArB,CAA5C;AAEA,QAAM,CAACC,UAAD,EAAa;AAAEC,IAAAA;AAAF,GAAb,IAA0BV,WAAW,CAACW,oBAAD,EAAuB;AAChEC,IAAAA,SAAS,EAAC,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC3B,YAAMC,IAAI,GAAGF,KAAK,CAACG,SAAN,CAAgB;AAAEC,QAAAA,KAAK,EAAEf;AAAT,OAAhB,CAAb;AACAgB,MAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACAA,MAAAA,IAAI,CAACK,QAAL,GAAgB,CAACN,MAAM,CAACC,IAAP,CAAYN,UAAb,EAAyB,GAAGM,IAAI,CAACK,QAAjC,CAAhB;AACAP,MAAAA,KAAK,CAACQ,UAAN,CAAiB;AAAEC,QAAAA,KAAK,EAAEpB,iBAAT;AAA4Ba,QAAAA;AAA5B,OAAjB;AACAX,MAAAA,MAAM,CAACI,IAAP,GAAc,EAAd,CAL2B,CAM3B;AACD;AAR+D,GAAvB,CAA3C;;AAWA,WAASD,kBAAT,GAA6B;AAC3BE,IAAAA,UAAU;AACX;;AACD,sBACE,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEH,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AACE,IAAA,WAAW,EAAC,wBADd;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,QAAQ,EAAED,QAHZ;AAIE,IAAA,KAAK,EAAED,MAAM,CAACI,IAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAOE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,KAAK,EAAC,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,CAFF,CADF;AAcD,CA/BD;;AAiCA,MAAMG,oBAAoB,GAAGZ,GAAI;;;;;;;;;;;;;;CAAjC;AAgBA,eAAeI,QAAf","sourcesContent":["import React from 'react';\nimport { Form, Button } from 'semantic-ui-react';\nimport { gql, useMutation } from '@apollo/client';\nimport { useForm } from '../util/hooks';\nimport {FETCH_POSTS_QUERY} from '../util/graphQL';\n\nconst PostForm = () => {\n  const {values, onChange, onSubmit} = useForm(createPostCallBack, { body: ''});\n\n  const [createPost, { error }] = useMutation(CREATE_POST_MUTATION, {\n    variables:(proxy, result) => {\n      const data = proxy.readQuery({ guery: FETCH_POSTS_QUERY });\n      console.log(data);\n      data.getPosts = [result.data.createPost, ...data.getPosts];\n      proxy.writeQuery({ query: FETCH_POSTS_QUERY, data});\n      values.body = '';\n      //onError: err => {err.graphQLErrors[0].extensions.exception.errors}\n    }\n  });\n\n  function createPostCallBack(){\n    createPost();\n  }\n  return (\n    <Form onSubmit={onSubmit}>\n      <h2>Create a post:</h2>\n      <Form.Field>\n        <Form.Input\n          placeholder=\"What are you thinking?\"\n          name=\"body\"\n          onChange={onChange}\n          value={values.body}\n          />\n        <Button type=\"submit\" color=\"teal\">Submit</Button>\n      </Form.Field>\n    </Form>\n  )\n}\n\nconst CREATE_POST_MUTATION = gql`\nmutation createPost($body: String!){\n  createPost(body: $body){\n    id body createdAt username\n    likes {\n      id username createdAt\n    }\n    likeCount\n    comments{\n      id body username createdAt\n    }\n    commentCount\n  }\n}\n`\n\nexport default PostForm;"]},"metadata":{},"sourceType":"module"}