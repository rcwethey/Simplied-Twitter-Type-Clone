{"ast":null,"code":"var _jsxFileName = \"/Users/ryanwethey/Documents/Developer/graphQL Projects/MERNG/client/src/ApolloProvider.js\";\nimport React from 'react';\nimport App from './App';\nimport { ApolloProvider, ApolloClient, InMemoryCache, createHttpLink } from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nconst cache = new InMemoryCache();\nconst link = createHttpLink({\n  uri: 'http://localhost:3001',\n  fetchOptions: 'include'\n});\nconst authLink = setContext((_, {\n  headers\n}) => {\n  const token = localStorage.getItem('jwtToken');\n  return {\n    headers: { ...headers,\n      authorization: token ? `bearer ${token}` : null\n    }\n  };\n});\nconst client = new ApolloClient({\n  link: authLink.concat(link),\n  cache: cache,\n  credentials: 'include'\n});\nexport default /*#__PURE__*/React.createElement(ApolloProvider, {\n  client: client,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }\n}));","map":{"version":3,"sources":["/Users/ryanwethey/Documents/Developer/graphQL Projects/MERNG/client/src/ApolloProvider.js"],"names":["React","App","ApolloProvider","ApolloClient","InMemoryCache","createHttpLink","setContext","cache","link","uri","fetchOptions","authLink","_","headers","token","localStorage","getItem","authorization","client","concat","credentials"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAASC,cAAT,EAAyBC,YAAzB,EAAuCC,aAAvC,EAAsDC,cAAtD,QAA4E,gBAA5E;AACA,SAASC,UAAT,QAA2B,6BAA3B;AAEA,MAAMC,KAAK,GAAG,IAAIH,aAAJ,EAAd;AACA,MAAMI,IAAI,GAAGH,cAAc,CAAC;AAAEI,EAAAA,GAAG,EAAE,uBAAP;AAAgCC,EAAAA,YAAY,EAAE;AAA9C,CAAD,CAA3B;AACA,MAAMC,QAAQ,GAAGL,UAAU,CAAC,CAACM,CAAD,EAAI;AAACC,EAAAA;AAAD,CAAJ,KAAkB;AAC5C,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAd;AACE,SAAO;AACLH,IAAAA,OAAO,EAAE,EACP,GAAGA,OADI;AAEPI,MAAAA,aAAa,EAAEH,KAAK,GAAI,UAASA,KAAM,EAAnB,GAAuB;AAFpC;AADJ,GAAP;AAMH,CAR0B,CAA3B;AAUA,MAAMI,MAAM,GAAG,IAAIf,YAAJ,CAAiB;AAC9BK,EAAAA,IAAI,EAAEG,QAAQ,CAACQ,MAAT,CAAgBX,IAAhB,CADwB;AAE9BD,EAAAA,KAAK,EAAEA,KAFuB;AAG9Ba,EAAAA,WAAW,EAAE;AAHiB,CAAjB,CAAf;AAMA,4BACE,oBAAC,cAAD;AAAgB,EAAA,MAAM,EAAEF,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF","sourcesContent":["import React from 'react';\nimport App from './App';\nimport { ApolloProvider, ApolloClient, InMemoryCache, createHttpLink } from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\nconst cache = new InMemoryCache();\nconst link = createHttpLink({ uri: 'http://localhost:3001', fetchOptions: 'include' });\nconst authLink = setContext((_, {headers}) => {\n  const token = localStorage.getItem('jwtToken');\n    return {\n      headers: {\n        ...headers,\n        authorization: token ? `bearer ${token}` : null\n    } \n  }\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(link),\n  cache: cache,\n  credentials: 'include',\n});\n\nexport default (\n  <ApolloProvider client={client}>\n    <App/>\n  </ApolloProvider>\n);"]},"metadata":{},"sourceType":"module"}