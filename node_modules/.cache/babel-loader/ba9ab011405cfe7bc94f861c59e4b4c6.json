{"ast":null,"code":"import { gql } from '@apollo/client';\nexport const FETCH_POSTS_QUERY = gql`\n  query getPosts{\n    getPosts{\n      id\n      body\n      createdAt\n      username\n      likeCount\n      likes {\n        username\n      }\n      commentCount\n      comments {\n        id\n        username\n        createdAt\n        body\n      }\n    }\n  }\n`;\nexport const CREATE_POST_MUTATION = gql`\n  mutation createPost($body: String!){\n    createPost(body: $body){\n      id \n      body \n      createdAt \n      username\n      likes {\n        id \n        username \n        createdAt\n      }\n      likeCount\n      comments{\n        id \n        body \n        username \n        createdAt\n      }\n      commentCount\n    }\n  }\n`;\nexport const LOGIN_USER = gql`\n  mutation login($username: String!, $password: String!){\n    login(username: $username, password: $password){\n      id email username token createdAt\n    }\n  }\n`;\nexport const REGISTER_USER = gql`\nmutation register($username: String!, $email: String!, $password: String!, $confirmPassword: String!){\n  register( registerInput: {username: $username, email: $email, password: $password, confirmPassword: $confirmPassword} )\n  {\n    id email username createdAt token\n  }\n}\n`;\nexport const LIKE_POST_MUTATION = gql`\n  mutation likePost($postId: ID!){\n    likePost(postId: $postId){\n      id\n      likes {\n        id username\n      }\n      likeCount\n    }\n  }\n`;\nexport const FETCH_POST_QUERY = gql`\n  query($postId: ID!) {\n    getPost(postId: $postId) {\n      id\n      body\n      createdAt\n      username\n      likeCount\n      likes {\n        username\n      }\n      commentCount\n      comments {\n        id\n        username\n        createdAt\n        body\n      }\n    }\n  }\n`;\nexport const DELETE_POST_MUTATION = gql`\n  mutation deletePost($postId: ID!){\n    deletePost(postId: $postId)\n  }\n`;\nexport const SUBMIT_COMMENT_MUTATION = gql`\n  mutation($postId: ID!, $body: String!){\n    createComment(postId: $postId, body: $body){\n      id commentCount comments{\n        id body createdAt username\n      }\n    }\n  }\n`;\nexport const DELETE_COMMENT_MUTATION = gql`\nmutation deleteComment($postId: ID!, $commentId: ID!){\n  deleteComment(postId: $postId, commentId: $commentId){\n    id comments{\n      id username createdAt body\n    }\n    commentCount\n  }\n}\n`;","map":{"version":3,"sources":["/Users/ryanwethey/Documents/Developer/graphQL Projects/MERNG/client/src/util/graphQL.js"],"names":["gql","FETCH_POSTS_QUERY","CREATE_POST_MUTATION","LOGIN_USER","REGISTER_USER","LIKE_POST_MUTATION","FETCH_POST_QUERY","DELETE_POST_MUTATION","SUBMIT_COMMENT_MUTATION","DELETE_COMMENT_MUTATION"],"mappings":"AAAA,SAASA,GAAT,QAAoB,gBAApB;AAEA,OAAO,MAAMC,iBAAiB,GAAGD,GAAI;;;;;;;;;;;;;;;;;;;;CAA9B;AAsBP,OAAO,MAAME,oBAAoB,GAAGF,GAAI;;;;;;;;;;;;;;;;;;;;;;CAAjC;AAwBP,OAAO,MAAMG,UAAU,GAAGH,GAAI;;;;;;CAAvB;AAQP,OAAO,MAAMI,aAAa,GAAEJ,GAAI;;;;;;;CAAzB;AASP,OAAO,MAAMK,kBAAkB,GAAGL,GAAI;;;;;;;;;;CAA/B;AAYP,OAAO,MAAMM,gBAAgB,GAAGN,GAAI;;;;;;;;;;;;;;;;;;;;CAA7B;AAsBP,OAAO,MAAMO,oBAAoB,GAAGP,GAAI;;;;CAAjC;AAOP,OAAO,MAAMQ,uBAAuB,GAAGR,GAAI;;;;;;;;CAApC;AAUP,OAAO,MAAMS,uBAAuB,GAAGT,GAAI;;;;;;;;;CAApC","sourcesContent":["import { gql } from '@apollo/client';\n\nexport const FETCH_POSTS_QUERY = gql`\n  query getPosts{\n    getPosts{\n      id\n      body\n      createdAt\n      username\n      likeCount\n      likes {\n        username\n      }\n      commentCount\n      comments {\n        id\n        username\n        createdAt\n        body\n      }\n    }\n  }\n`;\n\nexport const CREATE_POST_MUTATION = gql`\n  mutation createPost($body: String!){\n    createPost(body: $body){\n      id \n      body \n      createdAt \n      username\n      likes {\n        id \n        username \n        createdAt\n      }\n      likeCount\n      comments{\n        id \n        body \n        username \n        createdAt\n      }\n      commentCount\n    }\n  }\n`;\n\nexport const LOGIN_USER = gql`\n  mutation login($username: String!, $password: String!){\n    login(username: $username, password: $password){\n      id email username token createdAt\n    }\n  }\n`;\n\nexport const REGISTER_USER =gql`\nmutation register($username: String!, $email: String!, $password: String!, $confirmPassword: String!){\n  register( registerInput: {username: $username, email: $email, password: $password, confirmPassword: $confirmPassword} )\n  {\n    id email username createdAt token\n  }\n}\n`;\n\nexport const LIKE_POST_MUTATION = gql`\n  mutation likePost($postId: ID!){\n    likePost(postId: $postId){\n      id\n      likes {\n        id username\n      }\n      likeCount\n    }\n  }\n`;\n\nexport const FETCH_POST_QUERY = gql`\n  query($postId: ID!) {\n    getPost(postId: $postId) {\n      id\n      body\n      createdAt\n      username\n      likeCount\n      likes {\n        username\n      }\n      commentCount\n      comments {\n        id\n        username\n        createdAt\n        body\n      }\n    }\n  }\n`;\n\nexport const DELETE_POST_MUTATION = gql`\n  mutation deletePost($postId: ID!){\n    deletePost(postId: $postId)\n  }\n`;\n\n\nexport const SUBMIT_COMMENT_MUTATION = gql`\n  mutation($postId: ID!, $body: String!){\n    createComment(postId: $postId, body: $body){\n      id commentCount comments{\n        id body createdAt username\n      }\n    }\n  }\n`;\n\nexport const DELETE_COMMENT_MUTATION = gql`\nmutation deleteComment($postId: ID!, $commentId: ID!){\n  deleteComment(postId: $postId, commentId: $commentId){\n    id comments{\n      id username createdAt body\n    }\n    commentCount\n  }\n}\n`;"]},"metadata":{},"sourceType":"module"}