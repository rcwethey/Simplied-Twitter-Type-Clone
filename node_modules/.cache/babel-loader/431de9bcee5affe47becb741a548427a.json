{"ast":null,"code":"var _jsxFileName = \"/Users/ryanwethey/Documents/Developer/graphQL Projects/MERNG/client/src/Pages/Home.js\";\nimport React, { useContext } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { Grid, Transition } from 'semantic-ui-react';\nimport PostCard from '../components/postCard';\nimport { AuthContext } from '../context/auth';\nimport PostForm from '../components/postForm';\nimport { FETCH_POSTS_QUERY } from '../util/graphQL';\n\nconst Home = () => {\n  const {\n    user\n  } = useContext(AuthContext);\n  let posts = '';\n  const {\n    loading,\n    data\n  } = useQuery(FETCH_POSTS_QUERY);\n  if (data) posts = {\n    data: data.getPosts\n  };\n\n  const displayMessages = () => {\n    //if(loading){ return <h1>Loading posts..</h1> }\n    //else {\n    return /*#__PURE__*/React.createElement(Transition.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }\n    }, posts.data && posts.data.map(post => /*#__PURE__*/React.createElement(Grid.Column, {\n      key: post.id,\n      style: {\n        marginBottom: 20\n      },\n      className: loading ? 'loading' : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(PostCard, {\n      post: post,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }\n    })))); //}\n  };\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    columns: 1,\n    className: \"card-container\",\n    centered: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Row, {\n    className: \"page-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, \"Recent Posts\")), user && /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(PostForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  })), displayMessages());\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/ryanwethey/Documents/Developer/graphQL Projects/MERNG/client/src/Pages/Home.js"],"names":["React","useContext","useQuery","Grid","Transition","PostCard","AuthContext","PostForm","FETCH_POSTS_QUERY","Home","user","posts","loading","data","getPosts","displayMessages","map","post","id","marginBottom"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAgC,mBAAhC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,WAAT,QAA4B,iBAA5B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAAQC,iBAAR,QAAgC,iBAAhC;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAM;AAAEC,IAAAA;AAAF,MAAWT,UAAU,CAACK,WAAD,CAA3B;AACA,MAAIK,KAAK,GAAG,EAAZ;AACA,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAoBX,QAAQ,CAACM,iBAAD,CAAlC;AACA,MAAIK,IAAJ,EAAUF,KAAK,GAAG;AAAEE,IAAAA,IAAI,EAAEA,IAAI,CAACC;AAAb,GAAR;;AAGV,QAAMC,eAAe,GAAG,MAAM;AAC5B;AACA;AACG,wBACD,oBAAC,UAAD,CAAY,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCJ,KAAK,CAACE,IAAN,IAAcF,KAAK,CAACE,IAAN,CAAWG,GAAX,CAAeC,IAAI,iBAChC,oBAAC,IAAD,CAAM,MAAN;AAAa,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAvB;AAA2B,MAAA,KAAK,EAAE;AAAEC,QAAAA,YAAY,EAAE;AAAhB,OAAlC;AAAwD,MAAA,SAAS,EAAEP,OAAO,GAAG,SAAH,GAAc,EAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAEK,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADa,CADf,CADC,CAHyB,CAY9B;AACC,GAbD;;AAeA,sBACE,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAE,CAAf;AAAkB,IAAA,SAAS,EAAC,gBAA5B;AAA6C,IAAA,QAAQ,MAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,GAAN;AAAU,IAAA,SAAS,EAAC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF,EAIGP,IAAI,iBACH,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALJ,EASGK,eAAe,EATlB,CADF;AAaD,CAnCD;;AAqCA,eAAeN,IAAf","sourcesContent":["import React, { useContext } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { Grid, Transition} from 'semantic-ui-react';\nimport PostCard from '../components/postCard';\nimport { AuthContext } from '../context/auth';\nimport PostForm from '../components/postForm';\nimport {FETCH_POSTS_QUERY} from '../util/graphQL';\n\nconst Home = () => {\n  const { user } = useContext(AuthContext);\n  let posts = ''\n  const { loading, data } = useQuery(FETCH_POSTS_QUERY);\n  if (data) posts = { data: data.getPosts };\n\n\n  const displayMessages = () => {\n    //if(loading){ return <h1>Loading posts..</h1> }\n    //else {\n       return ( \n      <Transition.Group>\n      {posts.data && posts.data.map(post => (\n        <Grid.Column key={post.id} style={{ marginBottom: 20 }} className={loading ? 'loading': ''}>\n          <PostCard post={post} />\n        </Grid.Column>\n      ))}\n      </Transition.Group>\n    )\n  //}\n  }\n\n  return (\n    <Grid columns={1} className='card-container' centered>\n      <Grid.Row className=\"page-title\">\n        <h1>Recent Posts</h1>\n      </Grid.Row>\n      {user && (\n        <Grid.Column>\n          <PostForm />\n        </Grid.Column>\n      )}\n      {displayMessages()}\n    </Grid>\n  )\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}