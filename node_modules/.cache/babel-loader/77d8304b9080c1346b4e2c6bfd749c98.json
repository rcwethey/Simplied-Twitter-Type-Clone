{"ast":null,"code":"var _jsxFileName = \"/Users/ryanwethey/Documents/Developer/graphQL Projects/MERNG/client/src/Pages/Register.js\";\n//* Imported Dependencies\nimport React, { useState, useContext } from 'react';\nimport { Form, Button } from 'semantic-ui-react';\nimport { useMutation } from '@apollo/client'; //* Imported Components\n\nimport { useForm } from '../util/hooks';\nimport { AuthContext } from '../context/auth'; //* Imported CSS\n\nimport '../App.css'; //* Imported GraphQL\n\nimport { REGISTER_USER } from '../util/graphQL';\n\nconst Register = props => {\n  const context = useContext(AuthContext);\n  const [errors, setErrors] = useState({});\n  const {\n    onChange,\n    onSubmit,\n    values\n  } = useForm(registerUser, {\n    username: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const [addUser, {\n    loading\n  }] = useMutation(REGISTER_USER, {\n    update(_, {\n      data: {\n        register: userData\n      }\n    }) {\n      context.login(userData);\n      props.history.push('/');\n    },\n\n    onError(err) {\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\n    },\n\n    variables: values\n  });\n\n  function registerUser() {\n    addUser();\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: onSubmit,\n    noValidate: true,\n    className: loading ? 'loading' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \"Register\"), /*#__PURE__*/React.createElement(Form.Input, {\n    label: \"Username\",\n    placeholder: \"Username..\",\n    name: \"username\",\n    type: \"text\",\n    value: values.username,\n    error: errors.username ? true : false,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Form.Input, {\n    label: \"Email\",\n    placeholder: \"Email..\",\n    name: \"email\",\n    type: \"email\",\n    value: values.email,\n    error: errors.email ? true : false,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Form.Input, {\n    label: \"Password\",\n    placeholder: \"Password..\",\n    name: \"password\",\n    type: \"password\",\n    value: values.password,\n    error: errors.password ? true : false,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Form.Input, {\n    label: \"Confirm Password\",\n    placeholder: \"Confirm Password..\",\n    name: \"confirmPassword\",\n    type: \"password\",\n    value: values.confirmPassword,\n    error: errors.confirmPassword ? true : false,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    primary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, \"Register\")), Object.keys(errors).length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ui error message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, Object.values(errors).map(value => /*#__PURE__*/React.createElement(\"li\", {\n    key: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }, value)))));\n};\n\nexport default Register;","map":{"version":3,"sources":["/Users/ryanwethey/Documents/Developer/graphQL Projects/MERNG/client/src/Pages/Register.js"],"names":["React","useState","useContext","Form","Button","useMutation","useForm","AuthContext","REGISTER_USER","Register","props","context","errors","setErrors","onChange","onSubmit","values","registerUser","username","email","password","confirmPassword","addUser","loading","update","_","data","register","userData","login","history","push","onError","err","graphQLErrors","extensions","exception","variables","Object","keys","length","map","value"],"mappings":"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","sourcesContent":["//* Imported Dependencies\nimport React, { useState, useContext } from 'react';\nimport { Form, Button } from 'semantic-ui-react';\nimport { useMutation } from '@apollo/client';\n\n//* Imported Components\nimport { useForm } from '../util/hooks';\nimport { AuthContext } from '../context/auth';\n\n//* Imported CSS\nimport '../App.css';\n\n//* Imported GraphQL\nimport {REGISTER_USER} from '../util/graphQL'\n\nconst Register = props => {\n  const context = useContext(AuthContext);\n  const [errors, setErrors] = useState({});\n\n  const { onChange, onSubmit, values } = useForm(registerUser, {\n    username: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n  });\n\n  const [addUser, { loading }] = useMutation(REGISTER_USER, {\n    update(_,{ data: { register: userData }}) {\n      context.login(userData);\n      props.history.push('/');\n    },\n    onError(err) {\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\n    },\n    variables: values\n  });\n  \n  function registerUser() {\n    addUser();\n  }\n\n  return (\n    <div className=\"form-container\">\n      <Form onSubmit={onSubmit} noValidate className={loading ? 'loading' : ''}>\n        <h1>Register</h1>\n        <Form.Input\n          label=\"Username\"\n          placeholder=\"Username..\"\n          name=\"username\"\n          type=\"text\"\n          value={values.username}\n          error={errors.username ? true : false}\n          onChange={onChange}\n        />\n        <Form.Input\n          label=\"Email\"\n          placeholder=\"Email..\"\n          name=\"email\"\n          type=\"email\"\n          value={values.email}\n          error={errors.email ? true : false}\n          onChange={onChange}\n        />\n        <Form.Input\n          label=\"Password\"\n          placeholder=\"Password..\"\n          name=\"password\"\n          type=\"password\"\n          value={values.password}\n          error={errors.password ? true : false}\n          onChange={onChange}\n        />\n        <Form.Input\n          label=\"Confirm Password\"\n          placeholder=\"Confirm Password..\"\n          name=\"confirmPassword\"\n          type=\"password\"\n          value={values.confirmPassword}\n          error={errors.confirmPassword ? true : false}\n          onChange={onChange}\n        />\n        <Button type=\"submit\" primary>\n          Register\n        </Button>\n      </Form>\n      {Object.keys(errors).length > 0 && (\n        <div className=\"ui error message\">\n          <ul className=\"list\">\n            {Object.values(errors).map((value) => (\n              <li key={value}>{value}</li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n}\n\n\nexport default Register;"]},"metadata":{},"sourceType":"module"}