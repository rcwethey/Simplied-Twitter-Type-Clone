{"ast":null,"code":"var _jsxFileName = \"/Users/ryanwethey/Documents/Developer/graphQL Projects/MERNG/client/src/util/authRoute.js\";\nimport React, { useContext, Component } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { AuthContext } from '../context/auth';\n\nconst AuthRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  const {\n    user\n  } = useContext(AuthContext);\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => user ? /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 46\n      }\n    }) : /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 67\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/ryanwethey/Documents/Developer/graphQL Projects/MERNG/client/src/util/authRoute.js"],"names":["React","useContext","Component","Route","Redirect","AuthContext","AuthRoute","component","rest","user","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA4C,OAA5C;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,WAAT,QAA4B,iBAA5B;;AAEA,MAAMC,SAAS,GAAE,CAAC;AAAEC,EAAAA,SAAS,EAAEL,SAAb;AAAwB,KAAGM;AAA3B,CAAD,KAAsC;AACrD,QAAM;AAAEC,IAAAA;AAAF,MAAWR,UAAU,CAACI,WAAD,CAA3B;AAEA,sBACE,oBAAC,KAAD,oBAAWG,IAAX;AAAiB,IAAA,MAAM,EAAEE,KAAK,IAAID,IAAI,gBAAG,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,gBAAwB,oBAAC,SAAD,oBAAgBC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAGD,CAND","sourcesContent":["import React, { useContext, Component} from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { AuthContext } from '../context/auth';\n\nconst AuthRoute =({ component: Component, ...rest}) => {\n  const { user } = useContext(AuthContext);\n\n  return (\n    <Route {...rest} render={props => user ? <Redirect to=\"/\"/> : <Component { ...props}/> } />\n  )\n}"]},"metadata":{},"sourceType":"module"}