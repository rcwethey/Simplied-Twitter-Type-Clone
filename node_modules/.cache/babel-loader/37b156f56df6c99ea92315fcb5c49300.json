{"ast":null,"code":"var _jsxFileName = \"/Users/ryanwethey/Documents/Developer/graphQL Projects/MERNG/client/src/Pages/Register.js\";\n//* Imported Dependencies\nimport React, { useState, useContext } from 'react';\nimport { Form, Button } from 'semantic-ui-react';\nimport { useMutation } from '@apollo/client'; //* Imported Components\n\nimport { useForm } from '../util/hooks';\nimport { AuthContext } from '../context/auth'; //* Imported CSS\n\nimport '../App.css'; //* Imported GraphQL\n\nimport { REGISTER_USER } from '../util/graphQL';\n\nconst Register = props => {\n  const context = useContext(AuthContext);\n  const [errors, setErrors] = useState({});\n  const {\n    values,\n    onChange,\n    onSubmit\n  } = useForm(registerForm, {\n    username: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const [addUser, {\n    loading\n  }] = useMutation(REGISTER_USER, {\n    update: (_, {\n      data: {\n        login: userData\n      }\n    }) => {\n      context.login(userData);\n      props.history.push('/');\n    },\n    onError: err => {\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\n    },\n    variables: values\n  });\n\n  function registerForm() {\n    addUser();\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: onSubmit,\n    noValidate: true,\n    className: loading ? 'loading' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \"Register\"), /*#__PURE__*/React.createElement(Form.Input, {\n    label: \"Username\",\n    placeholder: \"Username...\",\n    type: \"text\",\n    error: errors.username ? true : false,\n    name: \"username\",\n    onChange: onChange,\n    value: values.username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Form.Input, {\n    label: \"Email\",\n    placeholder: \"Email...\",\n    type: \"email\",\n    error: errors.email ? true : false,\n    name: \"email\",\n    onChange: onChange,\n    value: values.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Form.Input, {\n    label: \"Password\",\n    placeholder: \"Password...\",\n    type: \"password\",\n    error: errors.password ? true : false,\n    name: \"password\",\n    onChange: onChange,\n    value: values.password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Form.Input, {\n    label: \"ComfirmPassword\",\n    placeholder: \"Comfirm Password...\",\n    type: \"password\",\n    error: errors.comfirmPassword ? true : false,\n    name: \"comfirmPassword\",\n    onChange: onChange,\n    value: values.comfirmPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    primary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, \"Register\")), Object.keys(errors).length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ui error message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, Object.values(errors).map(value => /*#__PURE__*/React.createElement(\"li\", {\n    key: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, value)))));\n};\n\nexport default Register;","map":{"version":3,"sources":["/Users/ryanwethey/Documents/Developer/graphQL Projects/MERNG/client/src/Pages/Register.js"],"names":["React","useState","useContext","Form","Button","useMutation","useForm","AuthContext","REGISTER_USER","Register","props","context","errors","setErrors","values","onChange","onSubmit","registerForm","username","email","password","confirmPassword","addUser","loading","update","_","data","login","userData","history","push","onError","err","graphQLErrors","extensions","exception","variables","comfirmPassword","Object","keys","length","map","value"],"mappings":"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","sourcesContent":["//* Imported Dependencies\nimport React, { useState, useContext } from 'react';\nimport { Form, Button } from 'semantic-ui-react';\nimport { useMutation } from '@apollo/client';\n\n//* Imported Components\nimport { useForm } from '../util/hooks';\nimport { AuthContext } from '../context/auth';\n\n//* Imported CSS\nimport '../App.css';\n\n//* Imported GraphQL\nimport {REGISTER_USER} from '../util/graphQL'\n\nconst Register = props => {\n  const context = useContext(AuthContext);\n  const [errors, setErrors] = useState({})\n  const {values, onChange, onSubmit} = useForm(registerForm, {\n    username: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  })\n\n  const [addUser, { loading }] = useMutation(REGISTER_USER, {\n    update: (_, { data: { login: userData}}) =>{ \n      context.login(userData);\n      props.history.push('/');\n    },\n    onError: err => { setErrors(err.graphQLErrors[0].extensions.exception.errors); },\n    variables: values\n  })\n\n  function registerForm(){ addUser(); }\n  \n  return (\n    <div className=\"form-container\">\n      <Form onSubmit={onSubmit} noValidate className={loading ? 'loading' : ''}>\n        <h1>Register</h1>\n        <Form.Input \n          label=\"Username\"\n          placeholder=\"Username...\"\n          type=\"text\"\n          error={errors.username ? true : false}\n          name=\"username\"\n          onChange={onChange}\n          value={values.username}/>\n        <Form.Input \n          label=\"Email\" \n          placeholder=\"Email...\" \n          type=\"email\" \n          error={errors.email ? true : false}\n          name=\"email\" \n          onChange={onChange} \n          value={values.email}/>\n        <Form.Input \n          label=\"Password\" \n          placeholder=\"Password...\" \n          type=\"password\"\n          error={errors.password ? true : false} \n          name=\"password\" \n          onChange={onChange} \n          value={values.password}/>\n        <Form.Input\n          label=\"ComfirmPassword\" \n          placeholder=\"Comfirm Password...\" \n          type=\"password\" \n          error={errors.comfirmPassword ? true : false}\n          name=\"comfirmPassword\" \n          onChange={onChange} \n          value={values.comfirmPassword}/>\n        <Button type=\"submit\" primary>Register</Button>\n    </Form>\n    {Object.keys(errors).length > 0 && (\n      <div className=\"ui error message\">\n        <ul className=\"list\">\n          {Object.values(errors).map((value) => (\n            <li key={value}>{value}</li>\n          ))}\n        </ul>\n      </div>\n    )}\n    </div>\n  )\n}\n\nexport default Register;"]},"metadata":{},"sourceType":"module"}