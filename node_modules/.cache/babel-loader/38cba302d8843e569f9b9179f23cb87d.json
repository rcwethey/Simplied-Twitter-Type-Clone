{"ast":null,"code":"var _jsxFileName = \"/Users/ryanwethey/Documents/Developer/graphQL Projects/MERNG/client/src/ApolloProvider.js\";\nimport React from 'react';\nimport App from './App';\nimport { ApolloProvider, ApolloClient, InMemoryCache, createHttpLink, setContext } from '@apollo/client';\nconst cache = new InMemoryCache();\nconst link = createHttpLink({\n  uri: 'http://localhost:3001'\n});\nconst token = localStorage.getItem('jwtToken');\nconst authLink = setContext(() => ({\n  if(token) {\n    return {\n      headers: {\n        authorization: token ? `bearer ${token}` : ''\n      }\n    };\n  }\n\n}));\nconst client = new ApolloClient({\n  link: authLink.concat(link),\n  cache: cache\n});\nexport default /*#__PURE__*/React.createElement(ApolloProvider, {\n  client: client,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }\n}));","map":{"version":3,"sources":["/Users/ryanwethey/Documents/Developer/graphQL Projects/MERNG/client/src/ApolloProvider.js"],"names":["React","App","ApolloProvider","ApolloClient","InMemoryCache","createHttpLink","setContext","cache","link","uri","token","localStorage","getItem","authLink","if","headers","authorization","client","concat"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAASC,cAAT,EAAyBC,YAAzB,EAAuCC,aAAvC,EAAsDC,cAAtD,EAAsEC,UAAtE,QAAwF,gBAAxF;AAEA,MAAMC,KAAK,GAAG,IAAIH,aAAJ,EAAd;AACA,MAAMI,IAAI,GAAGH,cAAc,CAAC;AAAEI,EAAAA,GAAG,EAAE;AAAP,CAAD,CAA3B;AACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAd;AACA,MAAMC,QAAQ,GAAGP,UAAU,CAAC,OAAO;AACjCQ,EAAAA,EAAE,CAACJ,KAAD,EAAO;AACP,WAAO;AACLK,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAEN,KAAK,GAAI,UAASA,KAAM,EAAnB,GAAuB;AADpC;AADJ,KAAP;AAKD;;AAPgC,CAAP,CAAD,CAA3B;AAUA,MAAMO,MAAM,GAAG,IAAId,YAAJ,CAAiB;AAC9BK,EAAAA,IAAI,EAAEK,QAAQ,CAACK,MAAT,CAAgBV,IAAhB,CADwB;AAE9BD,EAAAA,KAAK,EAAEA;AAFuB,CAAjB,CAAf;AAKA,4BACE,oBAAC,cAAD;AAAgB,EAAA,MAAM,EAAEU,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF","sourcesContent":["import React from 'react';\nimport App from './App';\nimport { ApolloProvider, ApolloClient, InMemoryCache, createHttpLink, setContext } from '@apollo/client';\n\nconst cache = new InMemoryCache();\nconst link = createHttpLink({ uri: 'http://localhost:3001' });\nconst token = localStorage.getItem('jwtToken');\nconst authLink = setContext(() => ({\n  if(token){\n    return {\n      headers: {\n        authorization: token ? `bearer ${token}` : ''\n      }\n    } \n  }\n}));\n\nconst client = new ApolloClient({\n  link: authLink.concat(link),\n  cache: cache\n});\n\nexport default (\n  <ApolloProvider client={client}>\n    <App/>\n  </ApolloProvider>\n);"]},"metadata":{},"sourceType":"module"}