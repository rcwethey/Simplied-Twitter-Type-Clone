{"ast":null,"code":"var _jsxFileName = \"/Users/ryanwethey/Documents/Developer/graphQL Projects/MERNG/client/src/context/auth.js\";\nimport React, { createContext, useReducer } from 'react';\nconst AuthContext = createContext({\n  user: null,\n  login: userData => {},\n  logout: () => {}\n});\n\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case 'LOGIN':\n      return { ...state,\n        user: action.payload\n      };\n\n    case 'LOGOUT':\n      return { ...state,\n        user: null\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst AuthProvider = props => {\n  const [state, dispatch] = useReducer(authReducer, {\n    user: null\n  });\n\n  const login = userData => {\n    dispatch({\n      type: 'LOGIN',\n      payload: userData\n    });\n  };\n\n  const logout = () => {\n    dispatch({\n      type: 'LOGOUT'\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, Object.assign({\n    value: {\n      user: state.user,\n      login,\n      logout\n    }\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport { AuthContext, AuthProvider };","map":{"version":3,"sources":["/Users/ryanwethey/Documents/Developer/graphQL Projects/MERNG/client/src/context/auth.js"],"names":["React","createContext","useReducer","AuthContext","user","login","userData","logout","authReducer","state","action","type","payload","AuthProvider","props","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AAEA,MAAMC,WAAW,GAAGF,aAAa,CAAC;AAChCG,EAAAA,IAAI,EAAE,IAD0B;AAEhCC,EAAAA,KAAK,EAAGC,QAAD,IAAc,CAAE,CAFS;AAGhCC,EAAAA,MAAM,EAAE,MAAM,CAAE;AAHgB,CAAD,CAAjC;;AAMA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,OAAL;AACE,aAAO,EAAE,GAAGF,KAAL;AAAYL,QAAAA,IAAI,EAAEM,MAAM,CAACE;AAAzB,OAAP;;AACF,SAAK,QAAL;AACE,aAAO,EAAE,GAAGH,KAAL;AAAYL,QAAAA,IAAI,EAAE;AAAlB,OAAP;;AACF;AACE,aAAOK,KAAP;AANJ;AAQD,CATD;;AAWA,MAAMI,YAAY,GAAGC,KAAK,IAAI;AAC5B,QAAM,CAACL,KAAD,EAAQM,QAAR,IAAoBb,UAAU,CAACM,WAAD,EAAc;AAACJ,IAAAA,IAAI,EAAE;AAAP,GAAd,CAApC;;AAEA,QAAMC,KAAK,GAAIC,QAAD,IAAc;AAC1BS,IAAAA,QAAQ,CAAC;AACPJ,MAAAA,IAAI,EAAE,OADC;AAEPC,MAAAA,OAAO,EAAEN;AAFF,KAAD,CAAR;AAID,GALD;;AAOA,QAAMC,MAAM,GAAG,MAAM;AACnBQ,IAAAA,QAAQ,CAAC;AAAEJ,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACD,GAFD;;AAIA,sBACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEP,MAAAA,IAAI,EAAEK,KAAK,CAACL,IAAd;AAAoBC,MAAAA,KAApB;AAA2BE,MAAAA;AAA3B;AAA7B,KACIO,KADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAID,CAlBD;;AAoBA,SAASX,WAAT,EAAsBU,YAAtB","sourcesContent":["import React, { createContext, useReducer } from 'react';\n\nconst AuthContext = createContext({\n  user: null, \n  login: (userData) => {},\n  logout: () => {}\n})\n\nconst authReducer = (state, action) => {\n  switch(action.type){\n    case 'LOGIN': \n      return { ...state, user: action.payload }\n    case 'LOGOUT': \n      return { ...state, user: null}\n    default:\n      return state;\n  }\n}\n\nconst AuthProvider = props => {\n  const [state, dispatch] = useReducer(authReducer, {user: null});\n\n  const login = (userData) => {\n    dispatch({\n      type: 'LOGIN',\n      payload: userData\n    })\n  }\n\n  const logout = () => {\n    dispatch({ type: 'LOGOUT' })\n  }\n\n  return (\n    <AuthContext.Provider value={{ user: state.user, login, logout}}\n    {...props} />\n  )\n}\n\nexport { AuthContext, AuthProvider };"]},"metadata":{},"sourceType":"module"}