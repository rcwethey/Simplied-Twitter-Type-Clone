{"ast":null,"code":"var _jsxFileName = \"/Users/ryanwethey/Documents/Developer/graphQL Projects/MERNG/client/src/components/commentButton.js\";\n//* Imported Dependencies\nimport React, { useState, useEffect } from 'react';\nimport { Button, Label, Icon } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom'; //* Imported Components\n\nimport MyPopup from '../util/mypopup';\n\nconst CommentButton = ({\n  user,\n  post: {\n    id,\n    comments,\n    commentCount\n  }\n}) => {\n  const [commented, setCommented] = useState(false);\n  useEffect(() => {\n    if (user && comments.find(comment => comment.username === user.username)) {\n      setCommented(true);\n    } else {\n      setCommented(false);\n    }\n  }, [user, comments]);\n  const buttontype = window.location.pathname === \"/\" ? /*#__PURE__*/React.createElement(Button, {\n    labelPosition: \"right\",\n    as: Link,\n    to: `/posts/${id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, user ? commented ? /*#__PURE__*/React.createElement(Button, {\n    color: \"yellow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MyPopup, {\n    content: \"Comment on Post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"comment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 15\n    }\n  }))) : /*#__PURE__*/React.createElement(Button, {\n    color: \"yellow\",\n    basic: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MyPopup, {\n    content: \"Comment on Post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"comment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 15\n    }\n  }))) : /*#__PURE__*/React.createElement(Button, {\n    color: \"yellow\",\n    basic: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MyPopup, {\n    content: \"Comment on Post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"comment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Label, {\n    basic: true,\n    color: \"yellow\",\n    pointing: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, commentCount)) : /*#__PURE__*/React.createElement(Button, {\n    labelPosition: \"right\",\n    as: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, user ? commented ? /*#__PURE__*/React.createElement(Button, {\n    color: \"yellow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MyPopup, {\n    content: \"Comment on Post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"comment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }\n  }))) : /*#__PURE__*/React.createElement(Button, {\n    color: \"yellow\",\n    basic: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MyPopup, {\n    content: \"Comment on Post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"comment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  }))) : /*#__PURE__*/React.createElement(Button, {\n    color: \"yellow\",\n    basic: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MyPopup, {\n    content: \"Comment on Post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"comment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Label, {\n    basic: true,\n    color: \"yellow\",\n    pointing: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, commentCount));\n  return buttontype;\n};\n\nexport default CommentButton;","map":{"version":3,"sources":["/Users/ryanwethey/Documents/Developer/graphQL Projects/MERNG/client/src/components/commentButton.js"],"names":["React","useState","useEffect","Button","Label","Icon","Link","MyPopup","CommentButton","user","post","id","comments","commentCount","commented","setCommented","find","comment","username","buttontype","window","location","pathname"],"mappings":"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","sourcesContent":["//* Imported Dependencies\nimport React, {useState, useEffect } from 'react';\nimport { Button, Label, Icon } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\n\n//* Imported Components\nimport MyPopup  from '../util/mypopup';\n\nconst CommentButton = ({user, post:{ id, comments, commentCount}}) => {\n  const [commented, setCommented] = useState(false);\n\n  useEffect(() => {\n    if(user && comments.find(comment => comment.username === user.username)){ setCommented(true) }\n    else { setCommented(false) }\n  }, [user, comments]);\n    \n  const buttontype = window.location.pathname === \"/\" ? (\n    <Button labelPosition='right' as={Link} to={`/posts/${id}`}>\n      {user ? (\n        commented ? (\n          <Button color='yellow'>\n            <MyPopup content=\"Comment on Post\"> \n              <Icon name='comment'/> \n            </MyPopup>\n          </Button> \n          ) : (\n          <Button color='yellow' basic>\n            <MyPopup content=\"Comment on Post\"> \n              <Icon name='comment'/> \n            </MyPopup>\n          </Button> \n          )\n        ): (\n        <Button color='yellow' basic>\n          <MyPopup content=\"Comment on Post\"> \n            <Icon name='comment'/> \n          </MyPopup>\n        </Button>\n        )\n      }\n      <Label basic color='yellow' pointing='left'>{commentCount}</Label>\n    </Button>\n    ) : (\n    <Button labelPosition='right' as=\"div\">\n      {user ? (\n        commented ? (\n          <Button color='yellow'>\n            <MyPopup content=\"Comment on Post\"> \n              <Icon name='comment'/> \n            </MyPopup>\n          </Button> \n          ) : (\n          <Button color='yellow' basic>\n            <MyPopup content=\"Comment on Post\"> \n              <Icon name='comment'/> \n            </MyPopup>\n          </Button> \n          ) \n        ) : (\n          <Button color='yellow' basic>\n            <MyPopup content=\"Comment on Post\"> \n              <Icon name='comment'/> \n            </MyPopup>\n          </Button>\n        )\n      }\n      <Label basic color='yellow' pointing='left'>{commentCount}</Label>\n    </Button>\n  )\n\n  return buttontype;\n}\n\nexport default CommentButton;\n"]},"metadata":{},"sourceType":"module"}