{"ast":null,"code":"var _jsxFileName = \"/Users/ryanwethey/Documents/Developer/graphQL Projects/MERNG/client/src/Pages/Home.js\";\nimport React from 'react';\nimport '../App.css';\nimport { gql, UseQuery } from '@apollo/client';\nimport { Grid } from 'semantic-ui-react';\nimport PostCard from '../components/postCard';\nconst FETCH_POSTS_QUERY = gql`\n  {\n    getPosts{ id body createdAt username likeCount commentCount\n      likes{ username }\n      comments{ id username body createdAt }\n    }\n  }\n`;\n\nconst Home = () => {\n  const {\n    loading,\n    _,\n    data: {\n      getPosts: posts\n    }\n  } = UseQuery(FETCH_POSTS_QUERY); //const posts = data.getPosts;\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    columns: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Row, {\n    className: \"post-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, \"Recent Posts\")), /*#__PURE__*/React.createElement(Grid.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, loading ? /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 23\n    }\n  }, \"Loading Posts...\") : posts && posts.map(post => {\n    return /*#__PURE__*/React.createElement(Grid.Column, {\n      style: {\n        marginBottom: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 20\n      }\n    }, /*#__PURE__*/React.createElement(PostCard, {\n      post: post,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }));\n  })));\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/ryanwethey/Documents/Developer/graphQL Projects/MERNG/client/src/Pages/Home.js"],"names":["React","gql","UseQuery","Grid","PostCard","FETCH_POSTS_QUERY","Home","loading","_","data","getPosts","posts","map","post","marginBottom"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AAEA,MAAMC,iBAAiB,GAAGJ,GAAI;;;;;;;CAA9B;;AASA,MAAMK,IAAI,GAAG,MAAM;AACjB,QAAM;AAACC,IAAAA,OAAD;AAAUC,IAAAA,CAAV;AAAaC,IAAAA,IAAI,EAAE;AAACC,MAAAA,QAAQ,EAAEC;AAAX;AAAnB,MAAwCT,QAAQ,CAACG,iBAAD,CAAtD,CADiB,CAEjB;;AACA,sBACE,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,GAAN;AAAU,IAAA,SAAS,EAAC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF,eAIE,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIE,OAAO,gBAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAL,GAAqCI,KAAK,IAAIA,KAAK,CAACC,GAAN,CAAUC,IAAI,IAAI;AACvE,wBAAS,oBAAC,IAAD,CAAM,MAAN;AAAa,MAAA,KAAK,EAAE;AAACC,QAAAA,YAAY,EAAE;AAAf,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACP,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAED,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADO,CAAT;AAGD,GAJsD,CADzD,CAJF,CADF;AAcD,CAjBD;;AAmBA,eAAeP,IAAf","sourcesContent":["import React from 'react';\nimport '../App.css';\nimport { gql, UseQuery } from '@apollo/client';\nimport { Grid } from 'semantic-ui-react'\nimport PostCard from '../components/postCard';\n\nconst FETCH_POSTS_QUERY = gql`\n  {\n    getPosts{ id body createdAt username likeCount commentCount\n      likes{ username }\n      comments{ id username body createdAt }\n    }\n  }\n`;\n\nconst Home = () => {\n  const {loading, _, data: {getPosts: posts}} = UseQuery(FETCH_POSTS_QUERY);\n  //const posts = data.getPosts;\n  return (\n    <Grid columns={1}>\n      <Grid.Row className='post-title'>\n        <h1>Recent Posts</h1>\n      </Grid.Row>\n      <Grid.Row>\n        { loading ? ( <h1>Loading Posts...</h1> ) : ( posts && posts.map(post => {\n          return ( <Grid.Column style={{marginBottom: 20}}>\n            <PostCard post={post}/>\n          </Grid.Column> )\n        }))}\n      </Grid.Row>\n    </Grid>\n  )\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}