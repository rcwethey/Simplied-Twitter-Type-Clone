{"ast":null,"code":"var _jsxFileName = \"/Users/ryanwethey/Documents/Developer/graphQL Projects/MERNG/client/src/components/postForm.js\";\n//* Imported Dependencies\nimport React from 'react';\nimport { Form, Button } from 'semantic-ui-react';\nimport { useMutation } from '@apollo/client'; //* Imported Components\n\nimport { useForm } from '../util/hooks'; //* Imported GraphQL\n\nimport { FETCH_POSTS_QUERY, CREATE_POST_MUTATION } from '../util/graphQL';\n\nconst PostForm = () => {\n  const {\n    values,\n    onChange,\n    onSubmit\n  } = useForm(createPostCallBack, {\n    body: ''\n  });\n  const [createPost, {\n    error\n  }] = useMutation(CREATE_POST_MUTATION, {\n    update: (proxy, result) => {\n      const data = proxy.readQuery({\n        query: FETCH_POSTS_QUERY\n      });\n      proxy.writeQuery({\n        query: FETCH_POSTS_QUERY,\n        data: {\n          getPosts: [result.data.createPost, ...data.getPosts]\n        }\n      });\n      values.body = '';\n    },\n    //refetchQueries: [{query: FETCH_POSTS_QUERY}],\n    variables: values,\n    onError: err => {\n      console.log('PostForm err', err);\n    }\n  });\n\n  function createPostCallBack() {\n    createPost();\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \"Create a post:\"), /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Input, {\n    placeholder: \"What are you thinking?\",\n    name: \"body\",\n    onChange: onChange,\n    error: error ? true : false,\n    value: values.body,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    color: \"teal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, \"Submit\"))), error && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ui error message\",\n    style: {\n      marginBottom: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, error.graphQLErrors[0].message))));\n};\n\nexport default PostForm;","map":{"version":3,"sources":["/Users/ryanwethey/Documents/Developer/graphQL Projects/MERNG/client/src/components/postForm.js"],"names":["React","Form","Button","useMutation","useForm","FETCH_POSTS_QUERY","CREATE_POST_MUTATION","PostForm","values","onChange","onSubmit","createPostCallBack","body","createPost","error","update","proxy","result","data","readQuery","query","writeQuery","getPosts","variables","onError","err","console","log","marginBottom","graphQLErrors","message"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,mBAA7B;AACA,SAASC,WAAT,QAA4B,gBAA5B,C,CAEA;;AACA,SAASC,OAAT,QAAwB,eAAxB,C,CAEA;;AACA,SAAQC,iBAAR,EAA2BC,oBAA3B,QAAsD,iBAAtD;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAM;AAACC,IAAAA,MAAD;AAASC,IAAAA,QAAT;AAAmBC,IAAAA;AAAnB,MAA+BN,OAAO,CAACO,kBAAD,EAAqB;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAArB,CAA5C;AACA,QAAM,CAACC,UAAD,EAAa;AAACC,IAAAA;AAAD,GAAb,IAAwBX,WAAW,CAACG,oBAAD,EAAuB;AAC9DS,IAAAA,MAAM,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACzB,YAAMC,IAAI,GAAGF,KAAK,CAACG,SAAN,CAAgB;AAAEC,QAAAA,KAAK,EAAEf;AAAT,OAAhB,CAAb;AACAW,MAAAA,KAAK,CAACK,UAAN,CAAiB;AAAED,QAAAA,KAAK,EAACf,iBAAR;AACfa,QAAAA,IAAI,EAAE;AAAEI,UAAAA,QAAQ,EAAC,CAACL,MAAM,CAACC,IAAP,CAAYL,UAAb,EAAyB,GAAGK,IAAI,CAACI,QAAjC;AAAX;AADS,OAAjB;AAGAd,MAAAA,MAAM,CAACI,IAAP,GAAc,EAAd;AACD,KAP6D;AAQ9D;AACAW,IAAAA,SAAS,EAAEf,MATmD;AAU9DgB,IAAAA,OAAO,EAAEC,GAAG,IAAI;AAAEC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,GAA5B;AAAmC;AAVS,GAAvB,CAAzC;;AAaA,WAASd,kBAAT,GAA6B;AAAEE,IAAAA,UAAU;AAAK;;AAE9C,sBACE,uDACE,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEH,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AACE,IAAA,WAAW,EAAC,wBADd;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,QAAQ,EAAED,QAHZ;AAIE,IAAA,KAAK,EAAEK,KAAK,GAAG,IAAH,GAAU,KAJxB;AAKE,IAAA,KAAK,EAAEN,MAAM,CAACI,IALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAQE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,KAAK,EAAC,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,CAFF,CADF,EAcGE,KAAK,iBACJ;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAkC,IAAA,KAAK,EAAE;AAAEc,MAAAA,YAAY,EAAE;AAAhB,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKd,KAAK,CAACe,aAAN,CAAoB,CAApB,EAAuBC,OAA5B,CADF,CADF,CAfJ,CADF;AAwBD,CAzCD;;AA2CA,eAAevB,QAAf","sourcesContent":["//* Imported Dependencies\nimport React from 'react';\nimport { Form, Button } from 'semantic-ui-react';\nimport { useMutation } from '@apollo/client';\n\n//* Imported Components\nimport { useForm } from '../util/hooks';\n\n//* Imported GraphQL\nimport {FETCH_POSTS_QUERY, CREATE_POST_MUTATION} from '../util/graphQL';\n\nconst PostForm = () => {\n  const {values, onChange, onSubmit} = useForm(createPostCallBack, { body: ''});\n  const [createPost, {error}] = useMutation(CREATE_POST_MUTATION, {\n    update: (proxy, result) => { \n      const data = proxy.readQuery({ query: FETCH_POSTS_QUERY });\n      proxy.writeQuery({ query:FETCH_POSTS_QUERY, \n        data: { getPosts:[result.data.createPost, ...data.getPosts]} \n      });\n      values.body = ''; \n    },\n    //refetchQueries: [{query: FETCH_POSTS_QUERY}],\n    variables: values,\n    onError: err => { console.log('PostForm err', err); }\n  });\n\n  function createPostCallBack(){ createPost(); }\n\n  return (\n    <>\n      <Form onSubmit={onSubmit}>\n        <h2>Create a post:</h2>\n        <Form.Field>\n          <Form.Input\n            placeholder=\"What are you thinking?\"\n            name=\"body\"\n            onChange={onChange}\n            error={error ? true : false}\n            value={values.body}\n            />\n          <Button type=\"submit\" color=\"teal\">Submit</Button>\n        </Form.Field>\n      </Form>\n      {error && (\n        <div className=\"ui error message\" style={{ marginBottom: 20}}>\n          <ul className=\"list\">\n            <li>{error.graphQLErrors[0].message}</li>\n          </ul>\n        </div>\n      )}\n    </>\n  )\n}\n\nexport default PostForm;"]},"metadata":{},"sourceType":"module"}